# ======================================================================
# PLATFORM OVERRIDE SECTION
# ======================================================================

#  Hello world does not require these URLs
PORTAL_URL = http://localhost
RUNID_URL  = http://localhost

# ======================================================================
# ROOT LOCATION
# ======================================================================

#  Define the an environment variable for IPS base directory.
IPS_ROOT = $IPS_PATH

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

SIM_NAME = ml_train
SIM_ROOT = $PWD

LOG_FILE = log.warning

SIMULATION_MODE = NORMAL
RUN_COMMENT = This is a ml_train test case.

#  Change to "quiet" to hide output.
#  Change to "verbose" to show all output.
#OUTPUT_LEVEL = quiet
OUTPUT_LEVEL = verbose

# ======================================================================
# STATE SECTION
# ======================================================================

STATE_WORK_DIR = $SIM_ROOT/work/plasma_state

CURRENT_ML_MODEL_STATE = current_ml_model_state.zip

CURRENT_ML_TRAIN_DATA = data.json
CURRENT_ML_TRAIN_NEW_DATA = new_data.json

CURRENT_ML_TRAIN_STATE = current_ml_train_state.zip

STATE_FILES = $CURRENT_ML_TRAIN_STATE

# ======================================================================
# Input File SECTION
# ======================================================================

#  JSON file to configure how the Machine learning model is trained.
ML_TRAIN_CONFIG = ml_train.json

#  Model input is a zip file containing a model state or all the input files of
#  the workflow that we will generate data for.
MODEL_INPUT = $CURRENT_ML_MODEL_STATE

#  ML_Train can be initialized from ether a model state input or an existing
#  training state. There is currently no error checking to ensure the input
#  state is a valid state.

USER_INPUT_FILES = $ML_TRAIN_CONFIG $CURRENT_ML_MODEL_STATE
#USER_INPUT_FILES = $CURRENT_ML_TRAIN_STATE

# ======================================================================
# Model SECTION
# ======================================================================
#  This configures the sub-workflow to use.
MODEL_SIM_CONFIG = $FASTRAN_CONFIG

# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    # The order here is the order in which they are run.

    NAMES = DRIVER INIT ML_TRAIN ML_GEN_DATA

    # Required ports - DRIVER and INIT   

    [[DRIVER]]
        IMPLEMENTATION = ml_train_driver

    [[INIT]]
        IMPLEMENTATION = ml_train_init

    [[ML_TRAIN]]
        IMPLEMENTATION = ml_train

    [[ML_GEN_DATA]]
        IMPLEMENTATION = ml_gen_data

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[ml_train_driver]
    CLASS = driver
    SUB_CLASS =
    INPUT_FILES =
    NAME = ml_train_driver
    NPROC = 1
    BIN_PATH = $IPS_ML_TRAIN_COMP_PATH
    SCRIPT = $BIN_PATH/ml_train_driver.py
    STATE_FILES = $CURRENT_ML_TRAIN_STATE
    OUTPUT_FILES = $CURRENT_ML_TRAIN_STATE

[ml_train_init]
    CLASS = workers
    SUB_CLASS =
    NAME = ml_train_init
    NPROC = 1
    BIN_PATH = $IPS_ML_TRAIN_COMP_PATH
    SCRIPT = $BIN_PATH/ml_train_init.py
    INPUT_FILES = $USER_INPUT_FILES
    STATE_FILES = $CURRENT_ML_TRAIN_STATE
    OUTPUT_FILES =

[ml_train]
    CLASS = workers
    SUB_CLASS =
    INPUT_FILES =
    NAME = ml_train
    NPROC = 1
    ML_TRAIN_EXE = $ML_TRAIN_INSTALL_PATH/$ML_TRAIN_INSTALL_NAME
    BIN_PATH = $IPS_ML_TRAIN_COMP_PATH
    SCRIPT = $BIN_PATH/ml_train.py
    STATE_FILES = $CURRENT_ML_TRAIN_STATE
    OUTPUT_FILES =

[ml_gen_data]
    CLASS = workers
    SUBCLASS =
    INPUT_FILE =
    NAME = ml_gen_data
    NPROC = 1
    BIN_PATH = $IPS_ML_TRAIN_COMP_PATH
    SCRIPT = $BIN_PATH/ml_gen_data.py
    STATE_FILES = $CURRENT_ML_TRAIN_STATE
    OUTPUT_FILES =
