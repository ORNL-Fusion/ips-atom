#based on berry's change temp prototype (components/drives/jwright/rfsim_dbb.conf)
#jcw - used to test toric with replay from tsc c-mod run
#10 aug 2007

IPS_ROOT = /p/swim/jwright/ips/                     # Root of IPS component and binary tree
SIM_NAME = TORIC_CMOD044a_jcw                       # Name of current simulation
#*
SIM_ROOT = $IPS_ROOT/$SIM_NAME                      # Where to put results from this simulation

#*work directory and naming of files
STATE_WORK_DIR = $SIM_ROOT/work/plasma_state # Where to put plasma state files as the simulation evolves
RUN_ID = $SIM_NAME
#*
OUTPUT_PREFIX = 

CURRENT_STATE = ${RUN_ID}_ps.cdf
PRIOR_STATE = ${RUN_ID}_ps.cdf #${RUN_ID}_psp.cdf 
CURRENT_EQDSK = ${RUN_ID}_ps.geq

#* What files constitute the plasma state
STATE_FILES = $CURRENT_STATE $PRIOR_STATE $CURRENT_EQDSK   

PLATFORM =                                          # Simulation Platform  (implemented?)
BATCH_SYSTEM =                                      # Which Batch system to use (implemented?)
MPIRUN = mpirun                                     # How are MPI jobs launched (interactively)
SIMULATION_MODE = SINGLE_STEP | RESTART             # Simulation mode (is it used yet?)
INITIALIZATION_MODE =                               # Initialization Mode (implemented?)
MACHINE_CONFIG_FILE =                               # Machine configuration file (implemented?)


#step service in .py driver determines what is actually done
[PORTS]
   NAMES = DRIVER EPA RF_IC
#Driver has custom section to control how components are used.
   [[DRIVER]]                                       # REQUIRED Port section, see step section of driver
      IMPLEMENTATION = TSC_REPLAY_TORIC_DRIVER      # TSC_REPLAY_DRIVER
                                                    

   [[INIT]]                                         # REQUIRED Port section (check currently disabled)
      IMPLEMENTATION =                              # Extra special setup stuff
                                                    
   [[EPA]]
      IMPLEMENTATION = TSC_REPLAY                   #loads tsc runs into state files
           
   [[RF_IC]]
      IMPLEMENTATION = TORIC                        #flr wave code component
      

# Individual configuration sections


# Component specification (entries similar for all components)
# NAME entry MUST match the name of the python class that implements the component
[TORIC]
    CLASS = rf
    SUB_CLASS = ic
    NAME = toric
    NPROC = 4
    BIN_PATH = $IPS_ROOT/components/$CLASS/$NAME/src
    INPUT_DIR = $IPS_ROOT/components/$CLASS/$NAME/src/CMODIC_A
    INPUT_FILES =  machine.inp equigs_gen.ind
    OUTPUT_FILES = torica.inp machine.inp toric.nc profstat.dat toric.sol equigs.data equidt.data toric.out toric_cfg.nc
    SCRIPT = $IPS_ROOT/bin/rf_ic_toric.py

[TSC_REPLAY]
    CLASS = epa
    SUB_CLASS = 
    NAME = tsc_replay
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
    INPUT_DIR = $IPS_ROOT/components/epa/tsc_replay
    INPUT_FILES = 
    OUTPUT_FILES = $STATE_FILES
    SCRIPT = $BIN_PATH/epa_tsc_replay.py
#    REPLAY_DIR = /p/swim/lpku/IPS/my_ips2/trunk/ips/CMOD044a/simulation_results/history #$IPS_ROOT/ITER
    REPLAY_DIR = /p/swim/dbatchel/IPS_dbb/ips/CMOD044a_dbb/simulation_results/history
    REPLAY_RUNID = CMOD044a_dbb  #make sure this points to longpo's files


[TSC_REPLAY_TORIC_DRIVER]
    CLASS = drivers
    SUB_CLASS = berry
    NAME = tscReplayAorsaDriver
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
    INPUT_DIR = $IPS_ROOT/components/$CLASS/$SUB_CLASS
    INPUT_FILES =
    OUTPUT_FILES =
    SCRIPT = $BIN_PATH/tsc_replay_aorsa_driver.py

 
# Time loop specification (two modes for now) EXPLICIT | REGULAR
# For MODE = REGULAR, the framework uses the variables START, FINISH, and NSTEP
# For MODE = EXPLICIT, the frame work uses the variable VALUES (space separated list of time values)
[TIME_LOOP]
   MODE = EXPLICIT
   START = 0.750
   FINISH = 2.000
   NSTEP  = 2
   VALUES = 0.750 1.000
   
